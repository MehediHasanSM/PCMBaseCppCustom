// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppArmadillo.h>
#include <Rcpp.h>

using namespace Rcpp;

// IsSingular
bool IsSingular(arma::mat const& X, double threshold_SV);
RcppExport SEXP _PCMBaseCpp_IsSingular(SEXP XSEXP, SEXP threshold_SVSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat const& >::type X(XSEXP);
    Rcpp::traits::input_parameter< double >::type threshold_SV(threshold_SVSEXP);
    rcpp_result_gen = Rcpp::wrap(IsSingular(X, threshold_SV));
    return rcpp_result_gen;
END_RCPP
}
// PairSums
arma::cx_mat PairSums(arma::cx_vec const& elems);
RcppExport SEXP _PCMBaseCpp_PairSums(SEXP elemsSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::cx_vec const& >::type elems(elemsSEXP);
    rcpp_result_gen = Rcpp::wrap(PairSums(elems));
    return rcpp_result_gen;
END_RCPP
}
// DecomposeH
Rcpp::List DecomposeH(arma::mat const& H, double threshold_SV);
RcppExport SEXP _PCMBaseCpp_DecomposeH(SEXP HSEXP, SEXP threshold_SVSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat const& >::type H(HSEXP);
    Rcpp::traits::input_parameter< double >::type threshold_SV(threshold_SVSEXP);
    rcpp_result_gen = Rcpp::wrap(DecomposeH(H, threshold_SV));
    return rcpp_result_gen;
END_RCPP
}
// CDFExpDivLambda
arma::cx_mat CDFExpDivLambda(arma::cx_mat const& Lambda_ij, double time, double threshold_Lambda_ij);
RcppExport SEXP _PCMBaseCpp_CDFExpDivLambda(SEXP Lambda_ijSEXP, SEXP timeSEXP, SEXP threshold_Lambda_ijSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::cx_mat const& >::type Lambda_ij(Lambda_ijSEXP);
    Rcpp::traits::input_parameter< double >::type time(timeSEXP);
    Rcpp::traits::input_parameter< double >::type threshold_Lambda_ij(threshold_Lambda_ijSEXP);
    rcpp_result_gen = Rcpp::wrap(CDFExpDivLambda(Lambda_ij, time, threshold_Lambda_ij));
    return rcpp_result_gen;
END_RCPP
}
// VOU
Rcpp::List VOU(arma::mat H, arma::mat Sigma, double time, double threshold_SV, double threshold_Lambda_ij);
RcppExport SEXP _PCMBaseCpp_VOU(SEXP HSEXP, SEXP SigmaSEXP, SEXP timeSEXP, SEXP threshold_SVSEXP, SEXP threshold_Lambda_ijSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type H(HSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type Sigma(SigmaSEXP);
    Rcpp::traits::input_parameter< double >::type time(timeSEXP);
    Rcpp::traits::input_parameter< double >::type threshold_SV(threshold_SVSEXP);
    Rcpp::traits::input_parameter< double >::type threshold_Lambda_ij(threshold_Lambda_ijSEXP);
    rcpp_result_gen = Rcpp::wrap(VOU(H, Sigma, time, threshold_SV, threshold_Lambda_ij));
    return rcpp_result_gen;
END_RCPP
}
